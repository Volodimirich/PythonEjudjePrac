#Написать модуль, в котором будет две фальшивые функции: randrange() и randint(), которые принимают тек же параметры,
#что и настоящие. При каждом чётном по порядку вызове функция randint(a, b) возвращает a, при нечётном — b.
#Функция randrange() может принимать от 1 до 4 параметров. Четвёртый параметр она игнорирует, а начало диапазона a,
#конец диапазона b и шаг d интерпретирует так. Если при очередном вызове эти величины совпадают с предыдущим вызовом,
#то randrange() сперва работает как range(), то есть возвращает сначала a, затем a+d и т. д., пока не доберётся до конца диапазона,
#после чего продолжает с начала диапазона (шаг при этом не сбивается, см. пример).
#Если же при очередном вызове значения a, b или d оказываются иными, процесс запускается с начала.

def randint(a,b,Mas = [False]):
    Mas[0] = not Mas[0]
    return a if Mas[0] else b

def randrange(a,b=None,d=1,trash=0,Mas=[],Res=[0]):
    if Mas==[a,b,d]:
        Res[0]+=d
        if b:
            if Res[0]>=b and d>0:
                Res[0]-=b-a
            if Res[0]<=b and d<0:
                Res[0]-=b-a
        else:
            if Res[0]>=a:
                Res[0]=0
    else:
        Mas.clear()
        Mas.append(a)
        Mas.append(b)
        Mas.append(d)
        if b:
            Res[0]=a
        else:
            Res[0]=0
    return Res[0]
